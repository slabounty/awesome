#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require_relative "lexer"
  require_relative "nodes"

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 143)
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.tokenize(code) # Tokenize the code using our lexer
    puts @tokens.inspect if show_tokens
    do_parse # Kickoff the parsing process
  end

  def next_token
    @tokens.shift
  end
...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    27,    25,    26,    16,    18,    19,    20,    21,    22,    23,
    24,    27,    25,    26,    16,    18,    19,    20,    21,    22,
    23,    24,    30,    50,    66,    30,    65,    36,    35,    15,
    34,    17,    58,    30,    57,    31,    40,    16,    31,    44,
    15,    52,    17,    27,    25,    26,    31,    18,    19,    20,
    21,    22,    23,    24,    27,    25,    26,    30,    18,    19,
    20,    21,    22,    23,    24,    17,    16,    28,    50,    61,
    31,    69,    15,    46,    38,    64,    37,    50,    34,    30,
    27,    25,    26,    15,    18,    19,    20,    21,    22,    23,
    24,    27,    25,    26,    17,    18,    19,    20,    21,    22,
    23,    24,    42,   nil,   nil,   nil,    27,    25,    26,    15,
    18,    19,    20,    21,    22,    23,    24,    27,    25,    26,
    15,    18,    19,    20,    21,    22,    23,    24,   nil,   nil,
   nil,   nil,    27,    25,    26,    15,    18,    19,    20,    21,
    22,    23,    24,    27,    25,    26,    15,    18,    19,    20,
    21,    22,    23,    24,   nil,   nil,   nil,   nil,    27,    25,
    26,    15,    18,    19,    20,    21,    22,    23,    24,    27,
    25,    26,    15,    18,    19,    20,    21,    22,    23,    24,
   nil,   nil,   nil,   nil,    27,    25,    26,    15,    18,    19,
    20,    21,    22,    23,    24,    27,    25,    26,    15,    18,
    19,    20,    21,    22,    23,    24,   nil,   nil,   nil,   nil,
    27,    25,    26,    15,    18,    19,    20,    21,    22,    23,
    24,    27,    25,    26,    15,    18,    19,    20,    21,    22,
    23,    24,   nil,   nil,   nil,   nil,    27,    25,    26,    15,
    18,    19,    20,    21,    22,    23,    24,    27,    25,    26,
    15,    18,    19,    20,    21,    22,    23,    24,   nil,   nil,
   nil,   nil,    27,    25,    26,    15,    18,    19,    20,    21,
    22,    23,    24,    27,    25,    26,    15,    18,    19,    20,
    21,    22,    23,    24,   nil,   nil,   nil,   nil,    27,    25,
    26,    15,    18,    19,    20,    21,    22,    23,    24,    27,
    25,    26,    15,    18,    19,    20,    21,    22,    23,    24,
   nil,   nil,   nil,   nil,    27,    25,    26,    15,    18,    19,
    20,    21,    22,    23,    24,    27,    25,    26,    15,    18,
    19,    20,    21,    22,    23,    24,   nil,   nil,   nil,   nil,
    27,    25,    26,    15,    18,    19,    20,    21,    22,    23,
    24,    27,    25,    26,    15,    18,    19,    20,    21,    22,
    23,    24,   nil,   nil,   nil,   nil,    27,    25,    26,    15,
    18,    19,    20,    21,    22,    23,    24,    27,    25,    26,
    15,    18,    19,    20,    21,    22,    23,    24,   nil,   nil,
   nil,   nil,    27,    25,    26,    15,    18,    19,    20,    21,
    22,    23,    24,    27,    25,    26,    15,    18,    19,    20,
    21,    22,    23,    24,   nil,   nil,   nil,   nil,    27,    25,
    26,    15,    18,    19,    20,    21,    22,    23,    24,    27,
    25,    26,    15,    18,    19,    20,    21,    22,    23,    24,
    50,    30,    30,    30,    30,   nil,   nil,    15,    30,    89,
    30,   nil,    30,    30,    31,    31,    31,    31,    15,    93,
    30,    31,    30,    31,    97,    31,    31,   101,    30,    30,
   105,    30,    30,    31,    30,    31,    30,   109,    30,   nil,
    30,    31,    31,    30,    31,    31,    30,    31,    73,    31,
    30,    31,    67,    31,    30,    30,    31,    77,    30,    31,
    81,    30,    30,    31,   nil,   nil,   nil,    31,    31,    85,
   nil,    31,   nil,   nil,    31,    31 ]

racc_action_check = [
    50,    50,    50,    50,    50,    50,    50,    50,    50,    50,
    50,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    32,    37,    60,    78,    60,    24,    23,    50,
    23,    50,    47,    86,    47,    32,    28,     2,    78,    32,
     0,    37,     0,    34,    34,    34,    86,    34,    34,    34,
    34,    34,    34,    34,    15,    15,    15,    43,    15,    15,
    15,    15,    15,    15,    15,     2,    59,     1,    65,    52,
    43,    66,    34,    34,    26,    59,    25,    38,    42,   110,
   105,   105,   105,    15,   105,   105,   105,   105,   105,   105,
   105,   103,   103,   103,    59,   103,   103,   103,   103,   103,
   103,   103,    30,   nil,   nil,   nil,   101,   101,   101,   105,
   101,   101,   101,   101,   101,   101,   101,    99,    99,    99,
   103,    99,    99,    99,    99,    99,    99,    99,   nil,   nil,
   nil,   nil,    27,    27,    27,   101,    27,    27,    27,    27,
    27,    27,    27,    97,    97,    97,    99,    97,    97,    97,
    97,    97,    97,    97,   nil,   nil,   nil,   nil,    29,    29,
    29,    27,    29,    29,    29,    29,    29,    29,    29,    95,
    95,    95,    97,    95,    95,    95,    95,    95,    95,    95,
   nil,   nil,   nil,   nil,    31,    31,    31,    29,    31,    31,
    31,    31,    31,    31,    31,    35,    35,    35,    95,    35,
    35,    35,    35,    35,    35,    35,   nil,   nil,   nil,   nil,
    36,    36,    36,    31,    36,    36,    36,    36,    36,    36,
    36,    67,    67,    67,    35,    67,    67,    67,    67,    67,
    67,    67,   nil,   nil,   nil,   nil,   109,   109,   109,    36,
   109,   109,   109,   109,   109,   109,   109,   107,   107,   107,
    67,   107,   107,   107,   107,   107,   107,   107,   nil,   nil,
   nil,   nil,    58,    58,    58,   109,    58,    58,    58,    58,
    58,    58,    58,    75,    75,    75,   107,    75,    75,    75,
    75,    75,    75,    75,   nil,   nil,   nil,   nil,    73,    73,
    73,    58,    73,    73,    73,    73,    73,    73,    73,    71,
    71,    71,    75,    71,    71,    71,    71,    71,    71,    71,
   nil,   nil,   nil,   nil,    93,    93,    93,    73,    93,    93,
    93,    93,    93,    93,    93,    91,    91,    91,    71,    91,
    91,    91,    91,    91,    91,    91,   nil,   nil,   nil,   nil,
    89,    89,    89,    93,    89,    89,    89,    89,    89,    89,
    89,    87,    87,    87,    91,    87,    87,    87,    87,    87,
    87,    87,   nil,   nil,   nil,   nil,    85,    85,    85,    89,
    85,    85,    85,    85,    85,    85,    85,    83,    83,    83,
    87,    83,    83,    83,    83,    83,    83,    83,   nil,   nil,
   nil,   nil,    81,    81,    81,    85,    81,    81,    81,    81,
    81,    81,    81,    79,    79,    79,    83,    79,    79,    79,
    79,    79,    79,    79,   nil,   nil,   nil,   nil,    77,    77,
    77,    81,    77,    77,    77,    77,    77,    77,    77,    56,
    56,    56,    79,    56,    56,    56,    56,    56,    56,    56,
    39,    88,    39,    90,    41,   nil,   nil,    77,    94,    88,
    92,   nil,    98,   102,    88,    39,    90,    41,    56,    92,
    96,    94,   100,    92,    96,    98,   102,   100,   104,   106,
   104,     3,    70,    96,   108,   100,    63,   108,    72,   nil,
    62,   104,   106,    74,     3,    70,    76,   108,    72,    63,
    49,    72,    62,    62,    80,    48,    74,    76,    82,    76,
    80,    45,    84,    49,   nil,   nil,   nil,    80,    48,    84,
   nil,    82,   nil,   nil,    45,    84 ]

racc_action_pointer = [
     9,    67,    32,   456,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    52,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    -1,    -2,    65,    62,   130,    36,   156,
    91,   182,     7,   nil,    41,   193,   208,    10,    64,   427,
   nil,   429,    47,    42,   nil,   486,   nil,     2,   480,   475,
    -2,   nil,    58,   nil,   nil,   nil,   427,   nil,   260,    61,
    -6,   nil,   465,   461,   nil,    55,    60,   219,   nil,   nil,
   457,   297,   463,   286,   468,   271,   471,   416,    10,   401,
   479,   390,   483,   375,   487,   364,    18,   349,   426,   338,
   428,   323,   435,   312,   433,   167,   445,   141,   437,   115,
   447,   104,   438,    89,   453,    78,   454,   245,   459,   234,
    64 ]

racc_action_default = [
    -1,   -56,    -2,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -56,   -18,   -19,   -20,   -21,
   -22,   -23,   -24,   -46,   -44,   -56,   -56,   -56,   -56,    -5,
   -56,   -56,   -56,   -25,   -56,   -56,   -56,   -56,   -56,   -56,
   111,    -4,   -27,   -32,   -17,   -30,   -28,   -56,   -47,   -45,
   -56,   -49,   -51,   -54,   -55,   -26,   -56,   -29,   -56,   -56,
   -56,   -52,   -56,   -31,   -48,   -56,   -56,   -56,   -50,   -53,
   -33,   -56,   -56,   -56,   -34,   -56,   -56,   -56,   -35,   -56,
   -56,   -56,   -36,   -56,   -56,   -56,   -37,   -56,   -56,   -56,
   -38,   -56,   -56,   -56,   -39,   -56,   -56,   -56,   -40,   -56,
   -56,   -56,   -41,   -56,   -56,   -56,   -42,   -56,   -56,   -56,
   -43 ]

racc_goto_table = [
    32,     2,    29,    51,    53,    54,    33,    79,    83,    87,
    91,    95,    39,    99,    41,   103,    43,   107,     1,    45,
    48,    49,    60,    47,    56,    55,    71,    75,   nil,   nil,
   nil,    68,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    62,   nil,    63,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    59,    70,   nil,   nil,   nil,    72,   nil,    74,    29,
    76,   nil,    78,   nil,    80,   nil,    82,   nil,    84,   nil,
    86,   nil,    88,   nil,    90,   nil,    92,   nil,    94,   nil,
    96,   nil,    98,   nil,   100,   nil,   102,   nil,   104,   nil,
   106,   nil,   108,   nil,   110 ]

racc_goto_check = [
     3,     2,     4,    28,    28,    28,    15,    20,    21,    22,
    23,    24,     3,    25,     3,    26,     3,    27,     1,     3,
     3,     3,    29,    16,    17,    15,    18,    19,   nil,   nil,
   nil,    28,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     3,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2,     3,   nil,   nil,   nil,     3,   nil,     3,     4,
     3,   nil,     3,   nil,     3,   nil,     3,   nil,     3,   nil,
     3,   nil,     3,   nil,     3,   nil,     3,   nil,     3,   nil,
     3,   nil,     3,   nil,     3,   nil,     3,   nil,     3,   nil,
     3,   nil,     3,   nil,     3 ]

racc_goto_pointer = [
   nil,    18,     1,   -15,     0,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -17,   -11,   -19,   -44,   -47,
   -71,   -74,   -77,   -80,   -83,   -85,   -87,   -89,   -34,   -30 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
    10,    11,    12,    13,    14,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 35, :_reduce_1,
  1, 35, :_reduce_2,
  1, 36, :_reduce_3,
  3, 36, :_reduce_4,
  2, 36, :_reduce_5,
  1, 36, :_reduce_6,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  3, 37, :_reduce_17,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 39, :_reduce_20,
  1, 39, :_reduce_21,
  1, 39, :_reduce_22,
  1, 39, :_reduce_23,
  1, 39, :_reduce_24,
  2, 40, :_reduce_25,
  4, 40, :_reduce_26,
  3, 40, :_reduce_27,
  2, 49, :_reduce_28,
  3, 49, :_reduce_29,
  1, 50, :_reduce_none,
  3, 50, :_reduce_31,
  0, 51, :_reduce_32,
  0, 52, :_reduce_33,
  0, 53, :_reduce_34,
  0, 54, :_reduce_35,
  0, 55, :_reduce_36,
  0, 56, :_reduce_37,
  0, 57, :_reduce_38,
  0, 58, :_reduce_39,
  0, 59, :_reduce_40,
  0, 60, :_reduce_41,
  0, 61, :_reduce_42,
  47, 41, :_reduce_43,
  1, 42, :_reduce_44,
  3, 43, :_reduce_45,
  1, 44, :_reduce_46,
  3, 45, :_reduce_47,
  3, 62, :_reduce_48,
  3, 46, :_reduce_49,
  6, 46, :_reduce_50,
  0, 63, :_reduce_51,
  1, 63, :_reduce_52,
  3, 63, :_reduce_53,
  3, 47, :_reduce_54,
  3, 48, :_reduce_55 ]

racc_reduce_n = 56

racc_shift_n = 111

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :DEF => 3,
  :CLASS => 4,
  :NEWLINE => 5,
  :NUMBER => 6,
  :STRING => 7,
  :TRUE => 8,
  :FALSE => 9,
  :NIL => 10,
  :IDENTIFIER => 11,
  :CONSTANT => 12,
  :INDENT => 13,
  :DEDENT => 14,
  "." => 15,
  "!" => 16,
  "*" => 17,
  "/" => 18,
  "+" => 19,
  "-" => 20,
  ">" => 21,
  ">=" => 22,
  "<" => 23,
  "<=" => 24,
  "==" => 25,
  "!=" => 26,
  "&&" => 27,
  "||" => 28,
  "=" => 29,
  "," => 30,
  "(" => 31,
  ")" => 32,
  ";" => 33 }

racc_nt_base = 34

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "DEF",
  "CLASS",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "CONSTANT",
  "INDENT",
  "DEDENT",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "$start",
  "Program",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "Operator",
  "GetConstant",
  "SetConstant",
  "GetLocal",
  "SetLocal",
  "Def",
  "Class",
  "If",
  "Arguments",
  "ArgList",
  "@1",
  "@2",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "Block",
  "ParamList" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 27)
  def _reduce_1(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 28)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 32)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 33)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 34)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 35)
  def _reduce_6(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'grammar.y', 49)
  def _reduce_17(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'grammar.y', 57)
  def _reduce_20(val, _values, result)
     result = NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 58)
  def _reduce_21(val, _values, result)
     result = StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 59)
  def _reduce_22(val, _values, result)
     result = TrueNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 60)
  def _reduce_23(val, _values, result)
     result = FalseNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 61)
  def _reduce_24(val, _values, result)
     result = NilNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 65)
  def _reduce_25(val, _values, result)
     result = CallNode.new(nil, val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 67)
  def _reduce_26(val, _values, result)
     result = CallNode.new(val[0], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 68)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[2], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 72)
  def _reduce_28(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 73)
  def _reduce_29(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'grammar.y', 78)
  def _reduce_31(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 82)
  def _reduce_32(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 83)
  def _reduce_33(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 84)
  def _reduce_34(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 85)
  def _reduce_35(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 86)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 87)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 88)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 89)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 90)
  def _reduce_40(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 91)
  def _reduce_41(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 92)
  def _reduce_42(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 93)
  def _reduce_43(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 97)
  def _reduce_44(val, _values, result)
     result = GetConstantNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 101)
  def _reduce_45(val, _values, result)
     result = SetConstantNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_46(val, _values, result)
     result = GetLocalNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_47(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 113)
  def _reduce_48(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 117)
  def _reduce_49(val, _values, result)
     result = DefNode.new(val[1], [], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 119)
  def _reduce_50(val, _values, result)
     result = DefNode.new(val[1], val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 123)
  def _reduce_51(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 124)
  def _reduce_52(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 125)
  def _reduce_53(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 129)
  def _reduce_54(val, _values, result)
     result = ClassNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 133)
  def _reduce_55(val, _values, result)
     result = IfNode.new(val[1], val[2]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
